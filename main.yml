---
- name: Manage SSL Certificates on BIG-IP
  hosts: all
  gather_facts: no
  vars:
    cert_path: "{{ [playbook_dir, 'certs'] | path_join }}"
  tasks:

    - name: Enrich variable with hash of keypair to be used as object name suffix
      # Example:
      # "enriched_client_ssl_profiles": [
      #   {
      #       "cert_pem": "LS0tLS1CRUdJ...",
      #       "key_pem": "LS0tLS1CRUdJ...",
      #       "profile_name": "ansible-foo",
      #       "ssl_object_name": "ansible-foo-228fa379c1bd157b63fbdb29d8bb5f58"  # suffixed with hash of key and cert
      #   }, ...
      # ]
      set_fact:
        enriched_client_ssl_profiles: >
          {{ enriched_client_ssl_profiles | default([]) +
            [{
              'key_pem': key_pem,
              'cert_pem': cert_pem,
              'profile_name': profile_name,
              'ssl_object_name': ssl_object_name
            }]
          }}
      loop: "{{ client_ssl_profiles | dict2items }}"
      vars:
        key_pem: "{{ lookup('file', [cert_path, item.value.key] | path_join) | b64encode }}"
        cert_pem: "{{ lookup('file', [cert_path, item.value.cert] | path_join) | b64encode }}"
        profile_name: "{{ item.key }}"
        ssl_object_name: "{{ item.key + '-' + (key_pem + cert_pem) | hash('md5') }}"
      delegate_to: localhost

    - debug:
        var: enriched_client_ssl_profiles
      delegate_to: localhost

    - name: Import both key and cert
      f5networks.f5_modules.bigip_ssl_key_cert:
        key_content: "{{ item.key_pem | b64decode }}"
        key_name: "{{ item.ssl_object_name }}"
        cert_content: "{{ item.cert_pem | b64decode }}"
        cert_name: "{{ item.ssl_object_name }}"
        state: present
        provider: "{{ bigip_module_provider }}"
      loop: "{{ enriched_client_ssl_profiles }}"
      loop_control:
        label: "{{ item.profile_name }}"
      delegate_to: localhost

    - name: Update SSL profile to use imported key and cert
      # optimization: check if the profile already references the imported key and cert, skip modify if so.
      bigip_command:
        commands: modify ltm profile client-ssl {{ item.profile_name }} cert {{ item.ssl_object_name }}.crt key {{ item.ssl_object_name }}.key
        provider: "{{ bigip_module_provider }}"
      loop: "{{ enriched_client_ssl_profiles }}"
      loop_control:
        label: "{{ item.profile_name }}"
      delegate_to: localhost
      args:
        warn: false  # ignore non-idempotent warning

    - name: Save changes
      # optimization: only save if there were changes made
      bigip_command:
        commands: save sys config
        provider: "{{ bigip_module_provider }}"
      delegate_to: localhost
      args:
        warn: false  # ignore non-idempotent warning
